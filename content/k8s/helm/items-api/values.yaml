# Declare variables to be passed into your templates.

replicaCount: 1

namespace: dev

image:
  repository: mdaacr.azurecr.io/elguerre.items.api
  tag: latest
  pullPolicy: IfNotPresent # Always

service:
  type: LoadBalancer 
  # type: ClusterIP
  port: 80

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# env defines the environment variables that will be declared in the pod
env:
  urls:
  # configmap declares variables which value is taken from the config map defined in template configmap.yaml (name is name of var and key the key in configmap).
  configmap:
    - name: ConnectionString
      key: items__ConnectionString
    - name: ApplicationInsights__InstrumentationKey
      key: all__InstrumentationKey
    - name: EventBusConnection
      key: all__EventBusConnection
      # values define environment variables with a fixed value (no configmap involved) (name is name of var, and value is its value)
  values:
    # - name: ASPNETCORE_ENVIRONMENT
    #   value: Development
    - name: OrchestratorType
      value: 'K8S'
probes:
  liveness:
    path: /liveness
    initialDelaySeconds: 10
    periodSeconds: 15
    port: 80
  readiness:
    path: /hc
    timeoutSeconds: 5
    initialDelaySeconds: 90
    periodSeconds: 60
    port: 80

# app.yaml
# Estos valores Helm definen configuraci√≥n dde cada servicio

app:                                                  
  name: "elguerre"
  ingress:
    entries:
      name: elguerre-items-api
  svc:
      name: elguerre-items-api

# inf.yaml
# Estos valores Helm definen la infraestrucutra para cada servicio.

inf:
  sql:
#    host:  my-sql-server 
    common:
      user: sa              # SQL user
      pwd: Pass@word        # SQL pwd
      pid: Developer
    service:
      db: itemsDb
  eventbus:     
     constr:                # Event bus connection string
     useAzure: true        # true if use Azure Service Bus. False if InMemory or RabbitMQ
  appinsights:
      key: ""
  k8s:                      # inf.k8s defines Kubernetes cluster global config
    dns:  ""                # k8s external  DNS. This value or ip value MUST BE PROVIDED